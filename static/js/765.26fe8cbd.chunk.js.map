{"version":3,"file":"static/js/765.26fe8cbd.chunk.js","mappings":"qMAiFA,UAzEA,WACI,OACI,SAAC,IAAD,WACI,UAAC,IAAD,CAAMA,GAAG,OAAT,WACI,UAAC,IAAD,CAAKC,UAAU,OAAf,WAEI,UAAC,UAAD,CAAYC,GAAIC,EAAAA,EAAKC,UAAU,gBAA/B,WACI,SAAC,UAAD,qBACA,SAAC,YAAD,CAAcC,KAAK,QAAQC,YAAY,oBAG3C,UAAC,UAAD,CAAYJ,GAAIC,EAAAA,EAAKC,UAAU,mBAA/B,WACI,SAAC,UAAD,wBACA,SAAC,YAAD,CAAcC,KAAK,WAAWC,YAAY,oBAKlD,UAAC,UAAD,CAAYL,UAAU,OAAOG,UAAU,mBAAvC,WACI,SAAC,UAAD,uBACA,SAAC,YAAD,CAAcE,YAAY,qBAG9B,UAAC,UAAD,CAAYL,UAAU,OAAOG,UAAU,mBAAvC,WACI,SAAC,UAAD,yBACA,SAAC,YAAD,CAAcE,YAAY,gBAG9B,UAAC,UAAD,CAAYL,UAAU,OAAOG,UAAU,UAAvC,WACI,SAAC,UAAD,kCACA,SAAC,YAAD,CAAcE,YAAY,iCAG9B,UAAC,UAAD,CAAYL,UAAU,OAAOG,UAAU,QAAvC,WACI,SAAC,UAAD,yBACA,SAAC,YAAD,CAAcC,KAAK,YAGvB,UAAC,IAAD,CAAKJ,UAAU,OAAf,WACI,UAAC,UAAD,CAAYC,GAAIC,EAAAA,EAAKC,UAAU,eAA/B,WACI,SAAC,UAAD,oBACA,SAAC,YAAD,QAGJ,UAAC,UAAD,CAAYF,GAAIC,EAAAA,EAAKC,UAAU,gBAA/B,WACI,SAAC,UAAD,qBACA,UAAC,WAAD,CAAaG,aAAa,YAA1B,WACI,2CACA,2CAIR,UAAC,UAAD,CAAYL,GAAIC,EAAAA,EAAKC,UAAU,cAA/B,WACI,SAAC,UAAD,mBACA,SAAC,YAAD,CAAcC,KAAK,kBAI3B,SAAC,UAAD,CAAYJ,UAAU,OAAOD,GAAG,mBAAhC,UACI,SAAC,UAAD,CAAYK,KAAK,WAAWG,MAAM,oBAEtC,gBAAKP,UAAU,cAAf,UACI,SAAC,IAAD,CAAQQ,QAAQ,UAAUJ,KAAK,SAA/B,4BASnB,C,8HC3EKK,EAAmBC,EAAAA,YAAiB,WAMvCC,GAAQ,IALTC,EAKS,EALTA,SACAZ,EAIS,EAJTA,UAIS,IAFTC,GAAIY,OAEK,MAFO,MAEP,EADNC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBJ,EAAU,OACjDK,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,MAChBC,EAAa,GAAH,OAAMN,EAAN,SACVO,EAAU,GAiBhB,OAhBAL,EAAYM,SAAQ,SAAAC,GAClB,IAEIC,EAFEC,EAAYZ,EAAMU,UACjBV,EAAMU,GAKTC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAGT,IAAMC,EAAQH,IAAaL,EAAb,WAAiCK,GAAa,GAChD,MAARC,GAAcH,EAAQM,KAAR,UAAgBP,GAAhB,OAA6BM,EAA7B,YAAsCF,GACzD,KACmBI,EAAAA,EAAAA,KAAKhB,GAAD,QAAC,QACvBF,IAAKA,GACFG,GAFmB,IAGtBd,UAAW8B,IAAAA,WAAA,GAAW9B,EAAWe,GAAtB,OAA4CO,MAE1D,IACDb,EAAIsB,YAAc,MAClB,K","sources":["features/offer/Hire.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Hire() {\r\n    return (\r\n        <Container>\r\n            <Form id=\"book\">\r\n                <Row className=\"mb-3\">\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                    </Form.Group>\r\n\r\n                </Row>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control placeholder=\"1234 Main St\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\r\n                    <Form.Label>Address 2</Form.Label>\r\n                    <Form.Control placeholder=\"Address\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"company\">\r\n                    <Form.Label>Business / Company</Form.Label>\r\n                    <Form.Control placeholder=\"Business or company name\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"phone\">\r\n                    <Form.Label>Telephone</Form.Label>\r\n                    <Form.Control type=\"tel\" />\r\n                </Form.Group>\r\n\r\n                <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Select defaultValue=\"Choose...\">\r\n                            <option>Choose...</option>\r\n                            <option>...</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"number\" />\r\n                    </Form.Group>\r\n                </Row>\r\n\r\n                <Form.Group className=\"mb-3\" id=\"formGridCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <div className=\"text-center\">\r\n                    <Button variant=\"success\" type=\"submit\">\r\n                        Book Now\r\n                    </Button>\r\n                </div>\r\n\r\n\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Hire;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["id","className","as","Col","controlId","type","placeholder","defaultValue","label","variant","Row","React","ref","bsPrefix","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}